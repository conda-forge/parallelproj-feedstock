{% set name = "parallelproj" %}
{% set version = "1.3.2" %}
{% set build_number = 1 %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/gschramm/parallelproj/archive/refs/tags/v{{ version }}.tar.gz
  sha256: c72a8f19fc657a1b10094ad9cfd539f31d1f51a9bcce50e7df53df06feaa2a02

build:
  number: {{ build_number }}

outputs:
  - name: parallelproj
    script: build-parallelproj.sh  # [unix]
    script: bld-parallelproj.bat  # [win]
    build:
      run_exports:
        - {{ pin_subpackage( name|lower, max_pin='x.x') }}
        - {{ name }} * *cuda*  # [cuda_compiler_version != "None"]
        - {{ name }} * *cpu*  # [cuda_compiler_version == "None"]
      ignore_run_exports:
        - cudatoolkit
      string: cpuh{{ PKG_HASH }}_{{ build_number }}  # [cuda_compiler_version == "None"]
      string: cuda{{ cuda_compiler_version|string }}h{{ PKG_HASH }}_{{ build_number }}  # [cuda_compiler_version != "None"]
    
    
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}  # [cuda_compiler_version != "None"]
        - {{ compiler('cuda') }}  # [cuda_compiler_version != "None"]
        - cmake >=3.23
        - ninja
        - python
      host:
        - libgomp      # [linux]
        - llvm-openmp  # [osx]
      run:
        - __cuda  # [cuda_compiler_version != "None"]
    test:
      commands:
        - test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT  # [unix]
        - test -f $PREFIX/include/parallelproj_c.h  # [unix]
        - test -f $PREFIX/lib/cmake/parallelproj/parallelprojConfig.cmake  # [unix]
        - test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT  # [linux and cuda_compiler_version != "None"]
        - test -f $PREFIX/include/parallelproj_cuda.h  # [linux and cuda_compiler_version != "None"]
        - if not exist %LIBRARY_LIB%\parallelproj_c.lib exit 1  # [win]
        - if not exist %LIBRARY_BIN%\parallelproj_c.dll exit 1  # [win]
        - if not exist %LIBRARY_INC%\parallelproj_c.h exit 1  # [win]
        - if not exist %LIBRARY_LIB%\cmake\parallelproj\parallelprojConfig.cmake exit 1  # [win]

  - name: parallelprojpy
    script: build-python.sh  # [unix]
    script: bld-python.bat  # [win]
    build:
      noarch: python
      script_env:
        - SETUPTOOLS_SCM_PRETEND_VERSION={{ PKG_VERSION }}
    requirements:
      build:
        - python  # [build_platform != target_platform]
        - cross-python_{{ target_platform }} # [build_platform != target_platform]
      host:
        - pip
        - python >=3.6,<4
        - setuptools >=45
        - setuptools_scm >=7.0
        - setuptools_scm_git_archive
      run:
        - {{ pin_subpackage('parallelproj') }}
        - numpy >1.12
    test:
      requires:
        - pip
        - pytest
      imports:
        - parallelprojpy
      source_files:
        - test/parallelprojpy/*
      commands:
        - pip check
        - pytest test/parallelprojpy -v

about:
  home: https://github.com/gschramm/parallelproj
  license: MIT
  license_file: LICENSE
  summary: parallelized TOF PET projectors

extra:
  recipe-maintainers:
    - gschramm
